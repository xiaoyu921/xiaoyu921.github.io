<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xiaoyu&#39;blog</title>
  <subtitle>Goals determine what you are going to be</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://https://xiaoyu921.github.io/"/>
  <updated>2016-07-25T01:22:47.164Z</updated>
  <id>http://https://xiaoyu921.github.io/</id>
  
  <author>
    <name>chenxiaoyu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo系列教程：（三）Hexo博客美化</title>
    <link href="http://https://xiaoyu921.github.io/2016/07/23/Hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    <id>http://https://xiaoyu921.github.io/2016/07/23/Hexo博客美化/</id>
    <published>2016-07-23T11:07:41.000Z</published>
    <updated>2016-07-25T01:22:47.164Z</updated>
    
    <content type="html"><![CDATA[<p>其实个人觉得这些美化有一丢丢的浪费时间，好在今天周末，我就当作玩玩了，首先来说博客里添加图片。</p>
<h3 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h3><pre><code>![动图](http://p3.music.126.net/KfwFXrx2yEll4mSi2Oy8wQ==/3434874332063283.jpg)
</code></pre><p><img src="http://p4.music.126.net/WwWiV68l539JWL0EJ5AXUg==/1401877338792613.jpg" alt="动图"></p>
<p><img src="http://p4.music.126.net/6gGX7SQ4mXEYf6f7s4vDgQ==/3393092900819195.jpg" alt="动图"></p>
<h3 id="添加音乐："><a href="#添加音乐：" class="headerlink" title="添加音乐："></a>添加音乐：</h3><p>很多网站支持外链播放器，</p>
<pre><code>&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;http://music.163.com/outchain/player?type=3&amp;id=791264600&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;
</code></pre><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=3&id=791264600&auto=0&height=66"></iframe>

]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实个人觉得这些美化有一丢丢的浪费时间，好在今天周末，我就当作玩玩了，首先来说博客里添加图片。&lt;/p&gt;
&lt;h3 id=&quot;添加图片&quot;&gt;&lt;a href=&quot;#添加图片&quot; class=&quot;headerlink&quot; title=&quot;添加图片&quot;&gt;&lt;/a&gt;添加图片&lt;/h3&gt;&lt;pre&gt;&lt;code
    
    </summary>
    
      <category term="Hexo" scheme="http://https://xiaoyu921.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo系列教程：（二）hexo博客的配置、使用</title>
    <link href="http://https://xiaoyu921.github.io/2016/07/23/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"/>
    <id>http://https://xiaoyu921.github.io/2016/07/23/Hexo博客优化/</id>
    <published>2016-07-23T10:58:45.000Z</published>
    <updated>2016-07-25T02:11:03.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Hexo主题更改及配置"><a href="#一、Hexo主题更改及配置" class="headerlink" title="一、Hexo主题更改及配置"></a>一、Hexo主题更改及配置</h2><h3 id="1-1-Hexo主题更改"><a href="#1-1-Hexo主题更改" class="headerlink" title="1.1 Hexo主题更改"></a>1.1 Hexo主题更改</h3><h4 id="1-1-1选择主题"><a href="#1-1-1选择主题" class="headerlink" title="1.1.1选择主题"></a>1.1.1选择主题</h4><p>进入<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo</a>的官网主题专栏，选择自己喜欢的主题然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：hexo-theme-next这个主题)你也可以通过其他途径找到自己喜欢的主题，只要找到其github地址复制下来即可</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1712159-e6d63d1b37c2fac9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="主题"></p>
<h4 id="1-1-2克隆主题"><a href="#1-1-2克隆主题" class="headerlink" title="1.1.2克隆主题"></a>1.1.2克隆主题</h4><p>打开Hexo文件夹下的themes目录（F:\Blog\hexo\themes），右键Git Bash，在命令行输入:</p>
<pre><code>$ git clone https://github.com/iissnan/hexo-theme-next(此处地址替换成你需要使用的主题的地址)
</code></pre><p>下载完成后即可</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1712159-a348cf48a13296ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="下载"></p>
<h3 id="1-2-主题配置"><a href="#1-2-主题配置" class="headerlink" title="1.2 主题配置"></a>1.2 主题配置</h3><p>下载完成后，打开Hexo文件夹下的配置文件_config.yml。修改主题参数</p>
<pre><code>theme: hexo-theme-next
</code></pre><p>顺带介绍一下，hexo里面有两个常用到的配置文件，分别是：</p>
<p><strong>整个博客的配置文件\hexo_config.yml</strong></p>
<p><strong>主题的配置文件\hexo\themes\light_config.yml</strong></p>
<p>此地址是对于我来说，hexo3.0使用的默认主题是landscape，因此你们的地址应该是\hexo\themes\landscape_config.yml。</p>
<p>本博客使用的主题是基于<a href="https://github.com/SuperKieran/TKL" target="_blank" rel="external">TKL</a>改善的主题，目前还在完善中，如果完成的比较好，以后可能发布在github上。因为作者是用ejs写的，所以我们修改主题的时候要考虑的问题要多一些。</p>
<p><img src="http://7xr185.com1.z0.glb.clouddn.com/tkl1.jpg" alt=""></p>
<pre><code>|-- layout (布局文件)
    |-- _widget (控件)
    |-- casper ( meta 等布局)
|-- source （资源文件 字体，样式，js等）
</code></pre><p>主要的布局都在<code>casper</code>文件夹下，如主页布局<code>index.ejs</code>,文章页布局<code>post.ejs</code>,顶部导航<code>header.ejs</code>,关于界面<code>about.ejs</code>。</p>
<h3 id="1-3-博客配置文件"><a href="#1-3-博客配置文件" class="headerlink" title="1.3 博客配置文件"></a>1.3 博客配置文件</h3><p>接下来介绍整个博客的配置文件。</p>
<pre><code># Hexo Configuration
## Docs: http://zespia.tw/hexo/docs/configure.html
## Source: https://github.com/tommy351/hexo/

# Site 这里的配置，哪项配置反映在哪里，可以参考我的博客
title: Zippera&apos;s blog #站点名，站点左上角
subtitle: Walk steps step by step #副标题，站点左上角
description: Walk steps step by step #给搜索引擎看的，对站点的描述，可以自定义
author: zippera #在站点左下角可以看到
email: #你的联系邮箱
language: zh-CN #中国人嘛，用中文

# URL #这项暂不配置，绑定域名后，欲创建sitemap.xml需要配置该项
## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;
url: http://zipperary.com
root: /
permalink: :year/:month/:day/:title/
tag_dir: tags
archive_dir: archives
category_dir: categories

# Writing 文章布局、写作格式的定义，不修改
new_post_name: :title.md # File name of new posts
default_layout: post
auto_spacing: false # Add spaces between asian characters and western characters
titlecase: false # Transform title into titlecase
max_open_file: 100
filename_case: 0
highlight:
  enable: true
  backtick_code_block: true
  line_number: true
  tab_replace:

# Category &amp; Tag 暂不配置，使用默认值
default_category: uncategorized
category_map:
tag_map:

# Archives 默认值为2，这里都修改为1，相应页面就只会列出标题，而非全文
## 2: Enable pagination
## 1: Disable pagination
## 0: Fully Disable
archive: 1
category: 1
tag: 1

# Server 不修改
## Hexo uses Connect as a server
## You can customize the logger format as defined in
## http://www.senchalabs.org/connect/logger.html
port: 4000
logger: false
logger_format:

# Date / Time format 日期格式，不修改
## Hexo uses Moment.js to parse and display date
## You can customize the date format as defined in
## http://momentjs.com/docs/#/displaying/format/
date_format: MMM D YYYY
time_format: H:mm:ss

# Pagination 每页显示文章数，可以自定义，我将10改成了5
## Set per_page to 0 to disable pagination
per_page: 5
pagination_dir: page

# Disqus Disqus插件，我们会替换成“多说”，不修改
disqus_shortname:xiaoyu921
  duoshuo_hotartical: true
  duoshuo_share: true
  duoshuo_info:
   ua_enable: true
   admin_enable: false
   user_id:
      admin_nickname:

# Extensions 这里配置站点所用主题和插件，暂默认，后面会介绍怎么修改
## Plugins:  http://hexo.io/plugins/
## Themes: http://hexo.io/themes/
theme: TKL
exclude_generator:
plugins:
- hexo-generator-feed
- hexo-generator-sitemap

# Deployment 站点部署到github要配置，上一节中已经讲过
## Docs: https://hexo.io/docs/deployment.html
deploy:
     type: git
     repository: https://github.com/xiaoyu921/xiaoyu921.github.io.git
     branch: master
</code></pre><hr>
<h2 id="二、使用Hexo发表文章"><a href="#二、使用Hexo发表文章" class="headerlink" title="二、使用Hexo发表文章"></a>二、使用Hexo发表文章</h2><h3 id="2-1-发表新文章"><a href="#2-1-发表新文章" class="headerlink" title="2.1 发表新文章"></a>2.1 发表新文章</h3><p>在Git Bash执行命令：</p>
<pre><code>$ hexo new &quot;新文章&quot;
</code></pre><p>即可在\hexo\source_post中打开 新文章.md。</p>
<pre><code>title: my new post #可以改成中文的，如“新文章”
date: 2016-07-22 22:56:29 #发表日期，一般不改动
categories: blog #文章文类
tags: [博客，文章] #文章标签，多于一项时用这种格式，只有一项时使用tags: blog
---
#这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上
&lt;!--more--&gt;，在&lt;!--more--&gt;之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more才能看到。
</code></pre><p>写完文章后，你可以使用</p>
<pre><code>$ hexo clean 清除缓存，不然可能导致更新无效
$ hexo g生成静态文件。
$ hexo s在本地预览效果。
$ hexo d同步到github
</code></pre><p>然后使用<a href="http://username.github.io进行访问。" target="_blank" rel="external">http://username.github.io进行访问。</a></p>
<h3 id="2-2-下载博客编译软件"><a href="#2-2-下载博客编译软件" class="headerlink" title="2.2 下载博客编译软件"></a>2.2 下载博客编译软件</h3><p>编译你的文章的时候需要一种编译软件，笔者使用的是Markdown Pad，也看到很多人使用简书，在这里介绍几种常见好用的编译器。</p>
<p>1.<a href="http://www.jianshu.com/" target="_blank" rel="external">简书</a>：一个很不错的博客平台，每几秒钟便会自动存入一个备份。可以直接从本地拖入照片生成链接，一直在不断优化。作为一个博客平台，需要注册账号后方能进行写作。</p>
<p><img src="http://www.williamlong.info/upload/4319_3.jpg" alt="简书"></p>
<p>2.<a href="http://marxi.co/" target="_blank" rel="external">Marxico</a> 中文名<a href="https://maxiang.io/" target="_blank" rel="external">马克飞象</a>，因为印象笔记不支持Markdown，而这款可以直接把文本存到印象笔记的编辑器对于重度印象笔记用户是个不错的选择。付费软件，可以免费试用。不过我没试过。</p>
<p><img src="http://www.williamlong.info/upload/4319_4.jpg" alt="飞象"></p>
<p>3.<a href="http://www.markdownpad.com/" target="_blank" rel="external">MarkdownPad</a>一款全功能的编辑器，被很多人称赞为windows 平台最好用的markdown编辑器</p>
<p><img src="http://www.williamlong.info/upload/4319_10.jpg" alt="markdown"></p>
<p>4.<a href="https://www.farbox.com/" target="_blank" rel="external">FarBox</a>一个支持Markdown写作语法的博客平台，让用户通过Dropbox（现在默认是自己的同步服务器）直接建立个人网站。FarBox编辑器免费，支持多平台（无web版，Linux版停止维护），个人认为是Windows平台最优雅的编辑器。多说一句，Farbox服务可以免费试用，在本地编辑器内写作自动同步发布在个人博客，对像笔者这样希望有个人博客但却不愿折腾的小白来说，是个不错的选择。</p>
<p><img src="http://www.williamlong.info/upload/4319_5.jpg" alt=""></p>
<h3 id="2-3-常用语句"><a href="#2-3-常用语句" class="headerlink" title="2.3 常用语句"></a>2.3 常用语句</h3><ol>
<li><p>标题设置（让字体变大，和word的标题意思一样）<br>在Markdown当中设置标题，有两种方式：<br>第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。<br>第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）</p>
</li>
<li><p>块注释（blockquote）<br>通过在文字开头添加“&gt;”表示块注释。（当&gt;和文字之间添加五个blank时，块注释的文字会有变化。）</p>
</li>
<li><p>斜体<br>将需要设置为斜体的文字两端使用1个“*”或者“_”夹起来</p>
</li>
<li><p>粗体<br>将需要设置为斜体的文字两端使用2个“*”或者“_”夹起来</p>
</li>
<li><p>无序列表<br>在文字开头添加(<em>, +, and -)实现无序列表。但是要注意在(</em>, +, and -)和文字之间需要添加空格。（建议：一个文档中只是用一种无序列表的表示方式）</p>
</li>
<li><p>有序列表<br>使用数字后面跟上句号。（还要有空格）</p>
</li>
<li><p>链接（Links）<br>Markdown中有两种方式，实现链接，分别为内联方式和引用方式。<br>内联方式：This is an <a href="http://example.com/" target="_blank" rel="external">example link</a>.<br>引用方式：<br>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a> than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.  </p>
</li>
</ol>
<ol>
<li><p>图片（Images）<br>图片的处理方式和链接的处理方式，非常的类似。</p>
<p> 内联方式：<code>![alt text](/path/to/img.jpg &quot;Title&quot;)</code></p>
<p> 引用方式：<code>![alt text][id] [id]: /path/to/img.jpg &quot;Title&quot;</code></p>
</li>
<li><p>代码（HTML中所谓的Code）<br>实现方式有两种：</p>
<p> 第一种：简单文字出现一个代码框。使用<code>&lt;blockquote&gt;</code>。（<code>不是单引号而是左上角的ESC下面~中的</code>）</p>
<p> 第二种：大片文字需要实现代码框。使用Tab和四个空格。</p>
</li>
<li><p>脚注（footnote）<br>实现方式如下： <code>hello[^hello]</code></p>
</li>
<li><p>下划线<br>在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题）</p>
</li>
</ol>
<p><strong>特别提示</strong></p>
<p>很多网友说hexo代码无法高亮，额，其实我也没做到，于是也是百度那个过程艰辛啊，最后在知乎里也是人家总结了几种方法，这里也给大家参考一下</p>
<ol>
<li><p>使用双空格缩进的方式（这种方式在Hexo中代码不支持高亮）</p>
</li>
<li><p>使用<code>code block</code>的方式（这种方式在部分情况下可以高亮，但是在我的机器上却不能实现高亮）</p>
</li>
<li><p>使用代码块的语法，具体可以看Codeblock - Octopress</p>
 <figure class="highlight plain"><figcaption><span>[] [title] [url] [link text]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">code snippet</div></pre></td></tr></table></figure>
</li>
</ol>
<p>反正最终我使用这种方式在我的hexo博客代码的高亮</p>
<h2 id="三、Hexo博客优化"><a href="#三、Hexo博客优化" class="headerlink" title="三、Hexo博客优化"></a>三、Hexo博客优化</h2><h3 id="3-1-添加评论"><a href="#3-1-添加评论" class="headerlink" title="3.1 添加评论"></a>3.1 添加评论</h3><p>网上说评论添加起来很简单，可是我却费了大半天功夫，虽然是直接拿“多说”来配置的，</p>
<ol>
<li><p>进入多说，注册一个帐号，然后点击安装创建一个站点，获得通用代码(建议使用稳定版)。</p>
</li>
<li><p>两种情况 第一种情况：如果你是使用的是light主题和基于light改善的主题，</p>
</li>
</ol>
<p>或者说你的hexo\themes..\layout_partial文件夹下有comment.ejs，</p>
<p>则将hexo\themes...\layout_partial\comment.ejs的代码改成如下代码，</p>
<p>其中short_name记得改成你自己的，在通用代码里可以看得到你的short_name。</p>
<pre><code>&lt;% if ( page.comments){ %&gt;

 &lt;nav id=&quot;pagination&quot; &gt;
    &lt;% if (page.prev) { %&gt;
      &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- page.prev.path %&gt;&quot; class=&quot;alignleft prev&quot; &gt;&lt;%= __(&apos;prev&apos;) %&gt;&lt;/a&gt;
    &lt;% } %&gt;
    &lt;% if (page.next) { %&gt;
    &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- page.next.path %&gt;&quot; class=&quot;alignright next&quot; &gt;&lt;%= __(&apos;next&apos;) %&gt;&lt;/a&gt;
    &lt;% } %&gt;
    &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;
&lt;/nav&gt;

&lt;section id=&quot;comment&quot;&gt;

&lt;!-- 多说评论框 start --&gt;
&lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;&lt;%= page.path %&gt;&quot; data-title=&quot;&lt;%= page.title %&gt;&quot; data-url=&quot;&lt;%= page.permalink %&gt;&quot;&gt;&lt;/div&gt;
&lt;!-- 多说评论框 end --&gt;
&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var duoshuoQuery = {short_name:&quot;chillax&quot;};
(function() {
    var ds = document.createElement(&apos;script&apos;);
    ds.type = &apos;text/javascript&apos;;ds.async = true;
    ds.src = (document.location.protocol == &apos;https:&apos; ? &apos;https:&apos; : &apos;http:&apos;) + &apos;//static.duoshuo.com/embed.js&apos;;
    ds.charset = &apos;UTF-8&apos;;
    (document.getElementsByTagName(&apos;head&apos;)[0] 
     || document.getElementsByTagName(&apos;body&apos;)[0]).appendChild(ds);
})();
&lt;/script&gt;
&lt;!-- 多说公共JS代码 end --&gt;

&lt;/section&gt;
&lt;% } %&gt;
</code></pre><p>第二种情况：如果你的\hexo\themes\light\layout_partial文件下没有comment.ejs，</p>
<p>则首先在E:\hexo\themes\landscape_config.yml中添加多说的配置：</p>
<pre><code>duoshuo_shortname: 你站点的short_name
</code></pre><p>然后修改E:\hexo\themes\landscape\layout_partial\article.ejs模板，修改如下。<br>把(在article.ejs文件的底部)</p>
<pre><code>&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname){ %&gt;
  &lt;section id=&quot;comments&quot;&gt;
    &lt;div id=&quot;disqus_thread&quot;&gt;
      &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;//disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;% } %&gt;
</code></pre><p>改为：</p>
<pre><code>&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.duoshuo_shortname){ %&gt;
  &lt;section id=&quot;comments&quot;&gt;
    &lt;!-- 多说评论框 start --&gt;
    &lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;&quot; data-title=&quot;&lt;%= post.title %&gt;&quot; data-url=&quot;&lt;%= page.permalink %&gt;&quot;&gt;&lt;/div&gt;
&lt;!-- 多说评论框 end --&gt;
&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var duoshuoQuery = {short_name:&apos;&lt;%= config.duoshuo_shortname %&gt;&apos;};
  (function() {
    var ds = document.createElement(&apos;script&apos;);
    ds.type = &apos;text/javascript&apos;;ds.async = true;
    ds.src = (document.location.protocol == &apos;https:&apos; ? &apos;https:&apos; : &apos;http:&apos;) + &apos;//static.duoshuo.com/embed.js&apos;;
    ds.charset = &apos;UTF-8&apos;;
    (document.getElementsByTagName(&apos;head&apos;)[0] 
     || document.getElementsByTagName(&apos;body&apos;)[0]).appendChild(ds);
  })();
  &lt;/script&gt;
&lt;!-- 多说公共JS代码 end --&gt;
  &lt;/section&gt;
  &lt;% } %&gt;
</code></pre><h3 id="3-2-小图标更改"><a href="#3-2-小图标更改" class="headerlink" title="3.2 小图标更改"></a>3.2 小图标更改</h3><p>我的博客是个小蚂蚁图标，你也可以改成自己喜欢的图标</p>
<p>打开hexo\themes\light\layout_partial\head.ejs，搜索<link href="<%- config.root %>favicon.png" rel="icon">，如果找不到，就搜索<link rel="icon" href="<%- theme.favicon %>">，替换为<link href="<%- config.root %>favicon.ico" rel="icon" type="image/x-ico">，然后将名字为favicon.ico的图标放\hexo\themes\light\source目录下。</p>
<h3 id="3-3-添加分类、标签云"><a href="#3-3-添加分类、标签云" class="headerlink" title="3.3 添加分类、标签云"></a>3.3 添加分类、标签云</h3><p>如果自己的主题里本就有，只需要打开或者关上即可，如果没有就添加以下代码：</p>
<pre><code>widgets:
     -category
    - tagcloud
</code></pre><h3 id="3-4-添加RSS"><a href="#3-4-添加RSS" class="headerlink" title="3.4 添加RSS"></a>3.4 添加RSS</h3><ol>
<li><p>安装RSS插件：$ npm install hexo-generator-feed –save</p>
</li>
<li><p>对\hexo_config.yml添加如下配置</p>
<p> feed:<br>  type: atom<br>  path: atom.xml<br>  limit: 20</p>
</li>
<li><p>对\hexo\themes..._config.yml进行如下配置,当然如果你的主题里面包含了，你只要去修改即可</p>
<p> rss: /atom.xml</p>
</li>
<li><p>在\hexo\themes...\layout_partial\header.ejs中，找到<code>&lt;ul&gt;&lt;/ul&gt;</code>,在<code>&lt;ul&gt;&lt;/ul&gt;</code>之间添加<code>&lt;li&gt; &lt;a href=&quot;/atom.xml&quot;&gt;RSS&lt;/a&gt; &lt;/li&gt;</code>。</p>
</li>
<li><p>将E:\hexo_config.yml中的url添加为自己的网址。</p>
<p> url: <a href="http://opiece.me" target="_blank" rel="external">http://opiece.me</a></p>
</li>
</ol>
<p>特别鸣谢：</p>
<ul>
<li><a href="http://opiece.me/2015/04/09/hexo-guide/" target="_blank" rel="external">使用Hexo搭建个人博客(基于hexo3.0) by Chillax’s Blog</a></li>
<li><a href="http://www.williamlong.info/archives/4319.html" target="_blank" rel="external">编译软件</a></li>
<li><a href="http://www.cnblogs.com/hnrainll/" target="_blank" rel="external">Markdown 11种基本语法 by Leo Chin</a></li>
<li><a href="http://www.zhihu.com/question/37052642/answer/98474590" target="_blank" rel="external">知乎by吴育昕</a></li>
<li><a href="http://opiece.me/2015/04/09/hexo-guide-2/" target="_blank" rel="external">Chillax’s Blog</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Hexo主题更改及配置&quot;&gt;&lt;a href=&quot;#一、Hexo主题更改及配置&quot; class=&quot;headerlink&quot; title=&quot;一、Hexo主题更改及配置&quot;&gt;&lt;/a&gt;一、Hexo主题更改及配置&lt;/h2&gt;&lt;h3 id=&quot;1-1-Hexo主题更改&quot;&gt;&lt;a href
    
    </summary>
    
      <category term="Hexo" scheme="http://https://xiaoyu921.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo系列教程：（一）搭建 GitHub Pages + Hexo博客</title>
    <link href="http://https://xiaoyu921.github.io/2016/07/22/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://https://xiaoyu921.github.io/2016/07/22/GitHub-Pages-Hexo搭建博客/</id>
    <published>2016-07-22T13:02:54.000Z</published>
    <updated>2016-07-25T02:08:25.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><h3 id="1-1写在前面"><a href="#1-1写在前面" class="headerlink" title="1.1写在前面"></a>1.1写在前面</h3><p>这是一篇使用GitHub Pages和Hexo搭建免费独立博客的总结。</p>
<p>作为一个前端大白来说，搭建过程活生生就是一部可歌可泣的血泪史，但是好在时间没有白费，通过给三台电脑搭建，现在也算是熟练的不要不要的。其实很想买一个自己的域名，搭建博客的初衷就是创造自己的品牌，况且chenxiaoyu.xyz多适合我（妈妈从小就想我像一个小宇宙一样爆发）奈何我还没有工资（( ▼-▼ )）</p>
<p>下面说说为啥写这篇博客</p>
<p>1.总结一下自己的安装经验</p>
<p>2.适应一下Markdown的写作语法</p>
<p>3.也算是深度理解一下GitHub吧</p>
<p>其实很感谢自己的导师，不是导师的提议，自己没个明确的方向，也就没有一个具体的学习目标，也不会费劲心思搭个博客。六个月的实习过去了一周，倘若每天的学习状态都像这些天一样打了鸡血似的，我的目标也就达到了。</p>
<h3 id="1-2熟悉Git-GitHub"><a href="#1-2熟悉Git-GitHub" class="headerlink" title="1.2熟悉Git\GitHub"></a>1.2熟悉Git\GitHub</h3><p>下面介绍一些可以熟悉Git的一些网站：</p>
<ul>
<li>Github简明教程：<a href="http://www.runoob.com/w3cnote/git-guide.html" target="_blank" rel="external">Github</a></li>
<li>GitBook: <a href="https://git-scm.com/book/zh/v2" target="_blank" rel="external">GitBook</a></li>
<li>待我代码编成，娶你为妻可好： <a href="https://github.com/phodal/github-roam" target="_blank" rel="external">GitHub 漫游指南</a></li>
</ul>
<p>至于Github到底能干什么，其实我自己到现在还不是很理解，但是目前来说，我可以用它来做一个博客了，而且导师与学长们一直用其来管理科研项目和数据。</p>
<p>他的一个创始人说 <strong> Do whatever you want </strong> .可以绑定你的域名(但暂时貌似只能绑定一个)。</p>
<p>简单快捷，使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。在知乎上看到说日本政府把宪法放上去了，德国政府也做过类似的事：German Federal Law Now on GitHub。还有一位奇葩用它来找男票，没错利用众包的形式一起罗列男友条件的 list 然后试图自己开发出一个<a href="https://github.com/YixuanFranco/YourBoyfriend" target="_blank" rel="external">男票</a>.当然，后期我也会考虑使用它来做一个个人简历，在此对他的其他功能就不多赘述了。</p>
<h3 id="1-3-git和github的区别"><a href="#1-3-git和github的区别" class="headerlink" title="1.3 git和github的区别"></a>1.3 git和github的区别</h3><p>git是一个版本控制的工具，而github有点类似于远程仓库，用于存放用git管理的各种项目。</p>
<p>具体的区别我们到后面再详细讲解</p>
<h5 id="详细参考"><a href="#详细参考" class="headerlink" title="详细参考"></a>详细参考</h5><ul>
<li><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="external">git - 简明教程</a></li>
</ul>
<hr>
<h2 id="二、安装准备"><a href="#二、安装准备" class="headerlink" title="二、安装准备"></a>二、安装准备</h2><h3 id="2-1GitHub-Pages"><a href="#2-1GitHub-Pages" class="headerlink" title="2.1GitHub Pages"></a>2.1GitHub Pages</h3><h5 id="创建自己的仓库"><a href="#创建自己的仓库" class="headerlink" title="创建自己的仓库"></a>创建自己的仓库</h5><p>首先要去官网注册一个自己的GitHub账号，注册完以后创建一个自己的Github Pages项目，之前看的教程上说项目名字必须为usemame.githhub.io，我照做了后面也成功了，然而在给同学搭建时他的项目名不是用户名，后期确实真的出现了错误。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1712159-3dfd013c098b6665.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建项目"></p>
<p>开始不是很懂为什么，后来百度查了资料，GitHub Pages有两种类型：User/Organization Pages 和 Project Pages，而我所使用的是User Pages。</p>
<p>简单来说，User Pages 与 Project Pages的区别是：</p>
<p>1.User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。</p>
<p>2.用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。</p>
<p>3.User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。</p>
<p>4.User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。</p>
<h5 id="详细参考-1"><a href="#详细参考-1" class="headerlink" title="详细参考"></a>详细参考</h5><ul>
<li><a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="external">GitHub Pages Basics / User, Organization, and Project Pages</a></li>
</ul>
<h3 id="2-2-Git"><a href="#2-2-Git" class="headerlink" title="2.2 Git"></a>2.2 Git</h3><h4 id="2-2-1-安装Git"><a href="#2-2-1-安装Git" class="headerlink" title="2.2.1 安装Git"></a>2.2.1 安装Git</h4><ul>
<li><a href="http://pan.baidu.com/s/1o8IUcK6" target="_blank" rel="external">Git Windows 百度云</a>（这里提供一个我自己的Git百度云，下载也算是方便快捷）</li>
<li><a href="https://git-scm.com/download/win" target="_blank" rel="external">Git 官方版本的安装</a></li>
<li><a href="https://desktop.github.com/" target="_blank" rel="external">GitHub for Windows</a></li>
</ul>
<h4 id="2-2-2-配置Git"><a href="#2-2-2-配置Git" class="headerlink" title="2.2.2 配置Git"></a>2.2.2 配置Git</h4><p>当安装完Git应该做的第一件事情就是设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改。当然我之前也看过很多教程，很多第一布什配置SSH，但是这里我就按照信息来做吧。</p>
<pre><code>$ git config --global user.name &quot;username&quot;
$ git config --global user.email &quot;username@example.com&quot;
</code></pre><p> <strong> 隐私做法 </strong> </p>
<p>对于user.email，因为在GitHub的commits信息上是可见的，所以如果你不想让人知道你的email，可以Keeping your email address private:</p>
<p>1.在GitHub右上方点击你的头像，选择”Settings”；</p>
<p>2.在右边的”Personal settings”侧边栏选择”Emails”；</p>
<p>3.选择”Keep my email address private”。</p>
<p>这样，你就可以使用如下格式的email进行配置：</p>
<pre><code>$ git config --global user.email &quot;username@users.noreply.github.com&quot;
</code></pre><h5 id="详细参考-2"><a href="#详细参考-2" class="headerlink" title="详细参考"></a>详细参考</h5><ul>
<li><a href="https://help.github.com/articles/setting-your-email-in-git/" target="_blank" rel="external">Setting your email in Git</a></li>
<li><a href="https://help.github.com/articles/keeping-your-email-address-private/" target="_blank" rel="external">Keeping your email address private</a></li>
</ul>
<h4 id="2-2-3-配置SSH"><a href="#2-2-3-配置SSH" class="headerlink" title="2.2.3 配置SSH"></a>2.2.3 配置SSH</h4><h4 id="2-2-3-1-检查电脑里是否已有SSH-keys"><a href="#2-2-3-1-检查电脑里是否已有SSH-keys" class="headerlink" title="2.2.3.1 检查电脑里是否已有SSH keys"></a>2.2.3.1 检查电脑里是否已有SSH keys</h4><pre><code>$ ls -al ~/.ssh
</code></pre><p>检查本机home目录下是否有.ssh目录，如果并不存在就进行下一步，如果存在，可以直接到第三步。</p>
<h4 id="2-2-3-2-创建SSH密钥（keys）"><a href="#2-2-3-2-创建SSH密钥（keys）" class="headerlink" title="2.2.3.2 创建SSH密钥（keys）"></a>2.2.3.2 创建SSH密钥（keys）</h4><pre><code>$ssh-keygen -t rsa -C &quot;your_email@example.com&quot;
</code></pre><p>之后直接回车，一路回车，因为他会叫你输入密码，你直接回车，没有密码就是最安全的密码，哈哈。将密钥按默认文件进行存储。当有以下结果时，前往自己的文件夹里比如/c/Users/you/.ssh/github_rsa查看密钥</p>
<pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.
Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.
The key fingerprint is:
01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com
</code></pre><h4 id="2-2-3-3在GitHub添加SSH-key。"><a href="#2-2-3-3在GitHub添加SSH-key。" class="headerlink" title="2.2.3.3在GitHub添加SSH key。"></a>2.2.3.3在GitHub添加SSH key。</h4><p>一般来说会有一个公有密钥和一个私有密钥，用记事本打开你的公有密钥，复制后登陆GitHub，在GitHub右上方点击头像，选择”Settings”，在右边的”Personal settings”侧边栏选择”SSH Keys”。接着粘贴key，点击”Add key”按钮。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://upload-images.jianshu.io/upload_images/1712159-0419298696b76bc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="粘贴密钥"></h2><h4 id="2-2-3-4-测试链接"><a href="#2-2-3-4-测试链接" class="headerlink" title="2.2.3.4 测试链接"></a>2.2.3.4 测试链接</h4><p>回到本机，输入以下指令查看是否成功</p>
<pre><code>$ ssh -T git@github.com
</code></pre><p>如果看到</p>
<pre><code>The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
</code></pre><p>输入yes，直到看到他欢迎你。哇塞(o゜▽゜)o☆，配好了哦。</p>
<pre><code>Hi username! You&apos;ve successfully authenticated, but GitHub does not 
provide shell access.
</code></pre><h5 id="详细参考-3"><a href="#详细参考-3" class="headerlink" title="详细参考"></a>详细参考</h5><ul>
<li><a href="https://help.github.com/articles/error-permission-denied-publickey/" target="_blank" rel="external">Error: Permission denied (publickey)</a></li>
<li><a href="https://help.github.com/articles/generating-an-ssh-key/" target="_blank" rel="external">GitHub Help - Generating SSH Keys</a></li>
</ul>
<h3 id="2-3-Node-js"><a href="#2-3-Node-js" class="headerlink" title="2.3 Node.js"></a>2.3 Node.js</h3><p>在 Windows 环境下安装 <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a> 非常简单，仅须到官网下载安装文件并执行即可完成安装。而且安装时一直下一步，不需要配置什么。</p>
<h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="http://upload-images.jianshu.io/upload_images/1712159-b460a3d917ed2ad7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="node.js"></h2><h3 id="2-4-Hexo"><a href="#2-4-Hexo" class="headerlink" title="2.4 Hexo"></a>2.4 Hexo</h3><h4 id="2-4-1-安装Hexo"><a href="#2-4-1-安装Hexo" class="headerlink" title="2.4.1 安装Hexo"></a>2.4.1 安装Hexo</h4><p>确认好上述全部安装完成了，现在可以直接使用npm完成Hexo的安装啦。<br>桌面右键鼠标，点击Git Bash Here，输入npm命令即可安装。</p>
<pre><code>npm install hexo-cli -g
npm install hexo --save
#如果命令无法运行，可以尝试更换taobao的npm源
npm install -g cnpm --registry=https://registry.npm.taobao.org
</code></pre><h4 id="2-4-2-初始化"><a href="#2-4-2-初始化" class="headerlink" title="2.4.2 初始化"></a>2.4.2 初始化</h4><p>找到一个自己喜欢的文件夹（例如D：\Hexo），点击鼠标右键选择Git bash，输入以下指令，该命令会在目标文件夹内建立网站所需要的所有文件。</p>
<pre><code>$ hexo init
</code></pre><p>接下来是安装依赖包。</p>
<pre><code>$ npm install
</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/1712159-63a6743a528a7c2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文件夹目录"></p>
<ul>
<li>_includes：默认的在模板中可以引用的文件的位置，后面会提到</li>
<li>_layouts：默认的公共页面的位置，后面会提到</li>
<li>_posts：博客文章默认的存放位置</li>
<li>.gitignore：git将忽略这个文件中列出的匹配的文件或文件夹，不将这些纳入源码管理</li>
<li>_config.yml：关于jekyll模板引擎的配置文件</li>
<li>index.html：默认的主页</li>
</ul>
<p>如果不想出错，就把这些全部安装完</p>
<pre><code>npm install hexo-generator-index --save
npm install hexo-generator-archive --save
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
</code></pre><p>这样我们就已经搭建好了本地的博客，可以先执行以下命令（在首次创建的文件夹），然后再浏览器输入localhost:4000查看</p>
<pre><code>$ hexo generate
$ hexo server
</code></pre><p>这两句语句以后会很常用到 hexo g 是更新，hexo s 用于发布本地。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1712159-9426f901de7b2a47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Hexo"></p>
<h3 id="2-5-Hexo部署到GitHub-Pages"><a href="#2-5-Hexo部署到GitHub-Pages" class="headerlink" title="2.5 Hexo部署到GitHub Pages"></a>2.5 Hexo部署到GitHub Pages</h3><p>那么现在本地的博客已经搭建起来了，但是我们只可以通过本地连接查看我们的博客。那么我们现在需要做的就是把本地的博客发布到服务器上，让别人也可以连接我们的博客，而Github Pages就帮我完成了这件事情。</p>
<p>登录Github打开自己的项目 username.github.io，打开之后，点击HTTPS，选择HTTPS类型地址,d点击旁边的复制按钮</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1712159-f97379e0b3497f5a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>然后到本地用记事本打开_config.yml</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1712159-41a0ba385286d40e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<pre><code>|--node_modules (npm)
|-- _config.yml  (全局配置文件)
|-- package.json （hexo框架参数）
|-- scaffolds （博文目录，hexo根据此文件夹来生成网页）
|-- source （重要，里面为新建的文章）
    |-- _drafts
    |-- _posts（通常hexo new 的文章都在这里）
|-- themes （主题文件）
</code></pre><p>在配置文件最底部，输入以下</p>
<pre><code>deploy:
  type: github
  repository: https://github.com/username/username.github.io.git
  branch: master
</code></pre><p>为了能够使Hexo部署到GitHub上，需要安装一个插件，如果你之前没装的话</p>
<pre><code>$ npm install hexo-deployer-git --save
</code></pre><p>然后，执行下列指令即可完成部署：</p>
<pre><code>$ hexo generate
$ hexo deploy
</code></pre><p>之后，可以通过在浏览器键入：username.github.io进行浏览，开心吧~</p>
<p><strong> 记住</strong> ：每次修改本地文件后，需要hexo generate才能保存。每次使用命令时，都要在H:\hexo目录下。</p>
<h3 id="某些bugs"><a href="#某些bugs" class="headerlink" title="某些bugs"></a>某些bugs</h3><p>1.有同学右键菜单中没有git bash选项，可以进入开始菜单找到git bash，然后通过cd进入相应目录执行命令。</p>
<p>2.在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了。</p>
<p>3.如果在hexo d之后出现fatal: ‘username.github.io’ does not appear to be a git repository，一是检查 repo 的名字是否合乎规范、是否含有大写字母、config.yml 中的 deploy 配置是否正确，二是把 git bash 关掉，重新打开再执行命令。</p>
<p>4.有的同学可能不是 IT 界的，或者对shell 命令不太了解。在要求输入密码时，你输入之后密码是不显示的，这是为了安全，并非是你没输上。</p>
<p>5.出现乱码的，不要使用 windows 中的「记事本」打开并编辑文件，推荐使用 sublime text，很简单。如果已经在「记事本」中编辑过，需要使用 sublime text 转码为「utf8」。</p>
<p>6.安装 hexo 时卡在那儿不动，很可能是网络不给力，能全局 break wall 就好了。</p>
<p>7.遇到什么其他的问题，不妨删除.deploy 和db.json 然后运行hexo clean，然后再重新生成hexo g hexo s试一试。</p>
<hr>
<p>特别鸣谢：</p>
<ul>
<li><a href="http://www.zipperary.com/" target="_blank" rel="external">hexo系列教程：（二）搭建hexo博客 by Zippera</a></li>
<li><a href="http://www.jianshu.com/p/15ae47eddc56" target="_blank" rel="external">小白独立搭建博客 by RyaneLee</a></li>
<li><a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more" target="_blank" rel="external">GitHub Pages + Hexo搭建博客 by CrazyMilk</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;h3 id=&quot;1-1写在前面&quot;&gt;&lt;a href=&quot;#1-1写在前面&quot; class=&quot;headerlink&quot; title=&quot;1.1
    
    </summary>
    
      <category term="Hexo" scheme="http://https://xiaoyu921.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>markdown简明语法</title>
    <link href="http://https://xiaoyu921.github.io/2016/07/22/02%20markdown%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95/"/>
    <id>http://https://xiaoyu921.github.io/2016/07/22/02 markdown简明语法/</id>
    <published>2016-07-22T08:40:53.051Z</published>
    <updated>2016-07-22T04:17:53.630Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="基本符号"><a href="#基本符号" class="headerlink" title="基本符号"></a>基本符号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">*,-,+ 3个符号效果都一样，这3个符号被称为 Markdown符号</div><div class="line">空白行表示另起一个段落</div><div class="line">`是表示inline代码，tab是用来标记 代码段，分别对应html的code，pre标签</div></pre></td></tr></table></figure>
<h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">单一段落( &lt;p&gt;) 用一个空白行</div><div class="line">连续两个空格 会变成一个 &lt;br&gt;</div><div class="line">连续3个符号，然后是空行，表示 hr横线</div></pre></td></tr></table></figure>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">生成h1--h6,在文字前面加上 1--6个<span class="comment"># 来实现</span></div><div class="line">文字加粗是通过 文字左右各两个符号</div></pre></td></tr></table></figure>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在第一行加上 “&gt;”和一个空格，表示代码引用，还可以嵌套</div></pre></td></tr></table></figure>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">直接写 [锚文本](url <span class="string">"可选的title"</span>)</div><div class="line">引用 先定义 [ref_name]:url，然后在需要写入url的地方， 这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业</div><div class="line">简写url：用尖括号包裹url </div><div class="line">这样生成的url锚文本就是url本身</div></pre></td></tr></table></figure>
<h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">一行表示: ![alt_text](url <span class="string">"可选的title"</span>)</div><div class="line">引用表示法: ![alt_text][id],预先定义 [id]:url <span class="string">"可选title"</span></div><div class="line">直接使用&lt;img&gt;标签，这样可以指定图片的大小尺寸</div></pre></td></tr></table></figure>
<p>貌似上面的比较繁杂，来个更加简明的，也是我比较常用的</p>
<h3 id="标题-1"><a href="#标题-1" class="headerlink" title="标题"></a>标题</h3><p> #一级 ##二级 ###三级</p>
<p>ps一个很尴尬的事，第一次自己写标题的时候怎么打#也没有标题的效果，一度怀疑人生，最后发现自己的空格没有控制好，#与文字之间的空格一定要注意！！不然出不来的哦</p>
<h3 id="引用-1"><a href="#引用-1" class="headerlink" title="引用"></a>引用</h3><blockquote>
<p>引用符号很漂亮有木有 啊哈哈哈 在第一行加上 “&gt;”和一个空格，表示代码引用，还可以嵌套</p>
</blockquote>
<hr>
<h3 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a><strong>粗体</strong>与<em>斜体</em></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">两个**粗体**  *斜体*  分割线***</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本语法&quot;&gt;&lt;a href=&quot;#基本语法&quot; class=&quot;headerlink&quot; title=&quot;基本语法&quot;&gt;&lt;/a&gt;基本语法&lt;/h2&gt;&lt;h3 id=&quot;基本符号&quot;&gt;&lt;a href=&quot;#基本符号&quot; class=&quot;headerlink&quot; title=&quot;基本符号&quot;&gt;&lt;/a
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>吐槽</title>
    <link href="http://https://xiaoyu921.github.io/2016/07/21/01%20%E5%90%90%E6%A7%BD/"/>
    <id>http://https://xiaoyu921.github.io/2016/07/21/01 吐槽/</id>
    <published>2016-07-21T13:23:39.000Z</published>
    <updated>2016-07-25T01:24:09.707Z</updated>
    
    <content type="html"><![CDATA[<p></p><p><br>直视自我内心的人，是值得敬佩的。</p>
<p></p><p><br>我不是，但我有个大学同学是，因为他能坚持每天写日记。</p>
<p></p><p><br>越长大，日记越是件难事。</p>
<p></p><p><br>我翻看很小时候的日记本，寥寥几笔，满满回忆；</p>
<p></p><p><br>再长大一些，不好看了，因为有些虚假，更多是为了应付老师的作业。</p>
<p></p><p><br>没有了真情实意，日记更像是作文。你看这名字的意义也够直接，“作”的文。</p>
<p></p><p><br>如果内心的小人与你说话，却都是谎话，记录又有何意义？</p>
<p></p><p><br>所以心智成熟后，日记越来越难被坚持下来。</p>
<p></p><p><br>更残酷的是，有时你根本不知道自己是不是在说谎！</p>
<p></p><p><br>你不确定是否喜欢现在的工作，</p>
<p></p><p><br>不确定自己的付出是否有回报，</p>
<p></p><p><br>以及，不确定爱不爱他</p>
<p></p><p><br>现代人想了一个极好的方法，叫——放空自己</p>
<p></p><p><br>把跳出来跟你争论的小人掩藏在游戏与歌酒里，什么都不去想，不去问。偶尔这样一下也挺好。</p>
<p></p><p><br>但我觉得，真实的记录还是要有。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;直视自我内心的人，是值得敬佩的。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;我不是，但我有个大学同学是，因为他能坚持每天写日记。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;越长大，日记越是件难事。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;我翻看很小时候的日记本，寥寥几
    
    </summary>
    
      <category term="杂文" scheme="http://https://xiaoyu921.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
      <category term="思想" scheme="http://https://xiaoyu921.github.io/tags/%E6%80%9D%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>梦想总是要有的，万一你有钱了呢</title>
    <link href="http://https://xiaoyu921.github.io/2016/07/21/03%20%E6%A2%A6%E6%83%B3%E6%80%BB%E6%98%AF%E8%A6%81%E6%9C%89%E7%9A%84%EF%BC%8C%E4%B8%87%E4%B8%80%E4%BD%A0%E6%9C%89%E9%92%B1%E4%BA%86%E5%91%A2/"/>
    <id>http://https://xiaoyu921.github.io/2016/07/21/03 梦想总是要有的，万一你有钱了呢/</id>
    <published>2016-07-21T12:34:35.000Z</published>
    <updated>2016-07-25T01:23:19.912Z</updated>
    
    <content type="html"><![CDATA[<p>科幻作品《星际迷航》里的想象，很多都塑造了今天我们生存的世界，比如里面随处可见的电子设备 PADD，相当于今天的平板电脑。</p>
<p>换句话说，《星际迷航》也给很多科技公司老板带来无数灵感，包括亚马逊的 CEO 贝索斯，姐姐杰姬·贝索斯还爆料说他经常引用电影里的台词，例如那句“宇宙是最终的边界。”（Space, the final frontier.）</p>
<p>如今这个来自休斯顿的孩子长大了，还实现了一个迷弟的最大梦想——在新电影《星际迷航·超越星辰》（Star Trek Beyond）出镜。</p>
<p>根据电影制作人 J.J Abrams 和导演 Justin Lin 的说法，贝索斯会出现“在一个拉拍镜头中”，没有台词，可能有特写镜头。</p>
<p>戏份虽然不多，但贝索斯在片场已经出尽了风头。</p>
<p>J.J Abrams 这样描述贝索斯：“跟总统来访似的，他带了一大堆随从。”在电影里饰演詹姆斯·T·柯克舰长的 Chris Pine 还添油加醋地补充说：“当时我站在那里，他就出现了，身边跟着九个保镖和三台豪华轿车。那场面真是……我不知道他是谁，不过很明显他是个重要人物。”</p>
<p>看到贝索斯实现童年梦想，让我想起了一句话：梦想总是要有的，万一你有钱了呢。</p>
<p>补充一句，贝索斯同时是以上提到的亚马逊、私人航空公司 Blue Origin、电影网站 IMDb、华盛顿邮报的老板。</p>
<p>嗯，是这样的，梦想总是要有的，万一你有钱了呢。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;科幻作品《星际迷航》里的想象，很多都塑造了今天我们生存的世界，比如里面随处可见的电子设备 PADD，相当于今天的平板电脑。&lt;/p&gt;
&lt;p&gt;换句话说，《星际迷航》也给很多科技公司老板带来无数灵感，包括亚马逊的 CEO 贝索斯，姐姐杰姬·贝索斯还爆料说他经常引用电影里的台词，例
    
    </summary>
    
      <category term="杂文" scheme="http://https://xiaoyu921.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
  </entry>
  
</feed>
